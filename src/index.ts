import { Bot } from 'grammy';
import * as dotenv from 'dotenv';
import axios from 'axios';

dotenv.config();

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY;

if (!TELEGRAM_BOT_TOKEN || !OPENROUTER_API_KEY) {
  console.error('–û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –∏–ª–∏ OPENROUTER_API_KEY –Ω–µ —É–∫–∞–∑–∞–Ω—ã');
  process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Bot(TELEGRAM_BOT_TOKEN);

// –í–ê–ñ–ù–û: –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã, –ø–æ—Ç–æ–º –æ–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
bot.command("start", async (ctx) => {
  console.log('üü¢ –°–¢–ê–†–¢ –ö–û–ú–ê–ù–î–ê - –û–±—Ä–∞–±–æ—Ç–∫–∞...');
  await ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç! –Ø ARK-1, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Ñ–æ—Ç–æ.`);
  console.log('‚úÖ –°–¢–ê–†–¢ –ö–û–ú–ê–ù–î–ê - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async function respondToText(ctx, text) {
  console.log('üü¢ –¢–ï–ö–°–¢ - –û–±—Ä–∞–±–æ—Ç–∫–∞:', text.substring(0, 30));
  
  try {
    // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–±–æ—Ä —Ç–µ–∫—Å—Ç–∞
    await ctx.api.sendChatAction(ctx.chat.id, "typing").catch(e => 
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ '–ø–µ—á–∞—Ç–∞–µ—Ç':", e.message)
    );
    
    // –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ API
    const response = await axios.post(
      'https://openrouter.ai/api/v1/chat/completions',
      {
        model: 'meta-llama/llama-4-maverick:free',
        messages: [
          {
            role: 'system',
            content: '–¢—ã ARK-1, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫–æ—Ä–æ—Ç–∫–æ –∏ —Ç–æ–ª—å–∫–æ –ø–æ –¥–µ–ª—É, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤. –ü–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.'
          },
          { role: 'user', content: text }
        ],
        max_tokens: 400,
        temperature: 0.7
      },
      {
        headers: {
          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
          'Content-Type': 'application/json',
        },
        timeout: 8000 // –ï—â—ë –±—ã—Å—Ç—Ä–µ–µ - 8 —Å–µ–∫—É–Ω–¥
      }
    );
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    const responseText = response.data?.choices[0]?.message?.content || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞';
    await ctx.reply(responseText);
    console.log('‚úÖ –¢–ï–ö–°–¢ - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç:', responseText.substring(0, 30));
    return true;
    
  } catch (error) {
    console.error('‚ùå –¢–ï–ö–°–¢ - –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error.message);
    await ctx.reply('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.').catch(e => 
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏:", e.message)
    );
    return false;
  }
}

// –û–ë–†–ê–ë–û–¢–ö–ê –í–°–ï–• –¢–ò–ü–û–í –°–û–û–ë–©–ï–ù–ò–ô
bot.on('message', async (ctx) => {
  // 1. –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ–º–∞–Ω–¥–∞ –ª–∏ —ç—Ç–æ
  if (ctx.message.text && ctx.message.text.startsWith('/')) {
    console.log('‚è© –ü—Ä–æ–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã:', ctx.message.text);
    return;
  }
  
  // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  if (ctx.message.text) {
    await respondToText(ctx, ctx.message.text);
    return;
  }
  
  // 3. –ï—Å–ª–∏ —ç—Ç–æ —Ñ–æ—Ç–æ
  if (ctx.message.photo) {
    console.log('üü¢ –§–û–¢–û - –û–±—Ä–∞–±–æ—Ç–∫–∞...');
    try {
      await ctx.api.sendChatAction(ctx.chat.id, "typing");
      
      const photoInfo = ctx.message.photo;
      const fileId = photoInfo[photoInfo.length - 1].file_id;
      const fileInfo = await ctx.api.getFile(fileId);
      
      if (!fileInfo.file_path) {
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∞–π–ª");
      }
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º URL —Ñ–æ—Ç–æ
      const photoUrl = `https://api.telegram.org/file/bot${TELEGRAM_BOT_TOKEN}/${fileInfo.file_path}`;
      const caption = ctx.message.caption || "–û–ø–∏—à–∏ —á—Ç–æ –Ω–∞ —ç—Ç–æ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏";
      
      const response = await axios.post(
        'https://openrouter.ai/api/v1/chat/completions',
        {
          model: 'meta-llama/llama-4-maverick:free',
          messages: [
            {
              role: 'system',
              content: '–¢—ã ARK-1, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –ø–æ –¥–µ–ª—É –∏ —Ç–æ–ª—å–∫–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.'
            },
            {
              role: 'user',
              content: [
                { type: 'text', text: caption },
                { type: 'image_url', image_url: { url: photoUrl } }
              ]
            }
          ],
          max_tokens: 600
        },
        {
          headers: {
            'Authorization': `Bearer ${OPENROUTER_API_KEY}`,
            'Content-Type': 'application/json',
          },
          timeout: 12000
        }
      );
      
      const responseText = response.data?.choices[0]?.message?.content || '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞';
      await ctx.reply(responseText);
      console.log('‚úÖ –§–û–¢–û - –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç');
      
    } catch (error) {
      console.error('‚ùå –§–û–¢–û - –û—à–∏–±–∫–∞:', error.message);
      await ctx.reply('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.');
    }
    return;
  }
  
  // 4. –õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
  console.log('üü¢ –î–†–£–ì–û–ï - –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥—Ä—É–≥–æ–≥–æ —Ç–∏–ø–∞');
  await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.').catch(e => 
    console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", e.message)
  );
});

// –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–ü–†–û–°–û–í –û–¢ TELEGRAM
module.exports = async (req, res) => {
  // –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º OK
  if (!res.headersSent) {
    res.status(200).send('OK');
  }
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    if (!req.body) {
      console.error('‚ö†Ô∏è –í–ï–ë–•–£–ö - –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–µ–ª–∞');
      return;
    }
    
    console.log(`üîµ –í–ï–ë–•–£–ö - ID: ${req.body.update_id}, –¢–∏–ø: ${req.body.message ? (req.body.message.text ? '–¢–µ–∫—Å—Ç' : '–î—Ä—É–≥–æ–µ') : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    
    // –ü–µ—Ä–µ–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –±–æ—Ç—É
    await bot.handleUpdate(req.body);
    console.log(`‚úÖ –í–ï–ë–•–£–ö - –û–±—Ä–∞–±–æ—Ç–∞–Ω –∑–∞–ø—Ä–æ—Å: ${req.body.update_id}`);
    
  } catch (error) {
    console.error(`‚ùå –í–ï–ë–•–£–ö - –û—à–∏–±–∫–∞: ${error.message}`);
  }
};

// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
if (process.env.NODE_ENV !== 'production') {
  bot.start();
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!');
} 