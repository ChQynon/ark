// –§–∞–π–ª api/webhook.js –¥–ª—è Vercel Serverless Functions
// –≠—Ç–æ—Ç —Ñ–∞–π–ª –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã Vercel –ø—Ä–∞–≤–∏–ª—å–Ω–æ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä–æ–≤–∞–ª –∑–∞–ø—Ä–æ—Å—ã –æ—Ç Telegram

// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
const { Bot } = require('grammy');
const axios = require('axios');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const BOT_NAME = "ARK-1";
const BOT_PLATFORM = "PLEXY";
const BOT_CREATOR = "@samgay_nis";

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–æ–≤
module.exports = async (req, res) => {
  console.log('===== WEBHOOK –ü–û–õ–£–ß–ï–ù =====');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const token = process.env.TELEGRAM_BOT_TOKEN;
    const openrouterApiKey = process.env.OPENROUTER_API_KEY;
    const siteUrl = process.env.YOUR_SITE_URL || 'https://ark-seven.vercel.app';
    const siteName = process.env.YOUR_SITE_NAME || 'ARK-1 Bot';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
    if (!token) {
      console.error('–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return res.status(200).send('OK');
    }
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    console.log('–ú–µ—Ç–æ–¥:', req.method);
    if (req.body) console.log('–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞:', JSON.stringify(req.body).substring(0, 500));
    
    // –û—Ç–≤–µ—á–∞–µ–º —Å—Ä–∞–∑—É, —á—Ç–æ–±—ã Telegram –Ω–µ –∂–¥–∞–ª
    res.status(200).send('OK');
    
    // –í—ã—è—Å–Ω—è–µ–º, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Telegram
    if (req.body && req.body.message) {
      const chatId = req.body.message.chat.id;
      const messageText = req.body.message.text || '';
      const userName = req.body.message.from.first_name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName} (${chatId}): ${messageText}`);
      
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
      const bot = new Bot(token);
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–º–∞–Ω–¥–∞ /start
      if (messageText === '/start') {
        await bot.api.sendMessage(chatId, 
          `üëã –ü—Ä–∏–≤–µ—Ç, ${userName}! –Ø ${BOT_NAME}, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ ${BOT_PLATFORM}.\n` +
          `–°–æ–∑–¥–∞–Ω –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}.\n\n` +
          `–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ—á—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏.`,
          { parse_mode: 'Markdown' }
        );
        console.log(`–û—Ç–≤–µ—Ç –Ω–∞ /start –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chatId}`);
        return;
      }
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–ø–µ—á–∞—Ç–∞–µ—Ç..." —Å—Ç–∞—Ç—É—Å
      await bot.api.sendChatAction(chatId, "typing");
      
      // –ï—Å–ª–∏ OPENROUTER API –∫–ª—é—á –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ò–ò
      if (openrouterApiKey && messageText) {
        try {
          console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter API...');
          
          // –ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
          const statusMsg = await bot.api.sendMessage(chatId, "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å...");
          
          // –ì–æ—Ç–æ–≤–∏–º –∑–∞–ø—Ä–æ—Å –∫ OpenRouter API
          const response = await axios.post(
            'https://openrouter.ai/api/v1/chat/completions',
            {
              model: 'meta-llama/llama-4-maverick:free',
              messages: [
                {
                  role: 'system',
                  content: [
                    {
                      type: 'text',
                      text: `–¢—ã ${BOT_NAME}, –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ –±–∞–∑–µ ${BOT_PLATFORM}, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–æ–º–ø–∞–Ω–∏–µ–π ${BOT_CREATOR}. –û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –í—Å–µ–≥–¥–∞ –ø–æ–ª–µ–∑–µ–Ω –∏ –¥—Ä—É–∂–µ–ª—é–±–µ–Ω.`
                    }
                  ]
                },
                {
                  role: 'user',
                  content: [
                    {
                      type: 'text',
                      text: messageText
                    }
                  ]
                }
              ]
            },
            {
              headers: {
                'Authorization': `Bearer ${openrouterApiKey}`,
                'HTTP-Referer': siteUrl,
                'X-Title': siteName,
                'Content-Type': 'application/json',
              }
            }
          );
          
          // –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
          const aiResponse = response.data.choices[0].message.content || '–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç.';
          console.log('OpenRouter API –æ—Ç–≤–µ—Ç–∏–ª:', aiResponse.substring(0, 100) + '...');
          
          // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          await bot.api.deleteMessage(chatId, statusMsg.message_id);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò
          await bot.api.sendMessage(chatId, aiResponse, {
            parse_mode: 'Markdown',
            disable_web_page_preview: true
          });
          
          console.log(`–ò–ò-–æ—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chatId}`);
        } catch (aiError) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenRouter API:', aiError);
          
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
          await bot.api.sendMessage(chatId, 
            '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ –ò–ò. ' +
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.'
          );
        }
      } else {
        // –ï—Å–ª–∏ –∫–ª—é—á OpenRouter –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
        if (messageText) {
          await bot.api.sendMessage(chatId, 
            `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${userName}! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ—É–Ω–∫—Ü–∏–∏ –ò–ò –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.\n\n` +
            `–í–∞—à –∑–∞–ø—Ä–æ—Å: "${messageText}"\n\n` +
            `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.`
          );
          console.log(`–ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chatId} (–ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)`);
        }
      }
      
      return;
    }
    
    console.log('–ó–∞–ø—Ä–æ—Å –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏—è Telegram');
    
  } catch (error) {
    console.error('–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
  }
}; 